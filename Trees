// MAXIMUM DPETH OF THE BINARY TREE

class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;

    public TreeNode(int val) {
        this.val = val;
    }
}

public class BinaryTreeDepth {

    public int maxDepth(TreeNode root) {
        if (root == null) {
            return 0;
        }

        int leftDepth = maxDepth(root.left);
        int rightDepth = maxDepth(root.right);

        // Return the maximum depth of the left and right subtrees, plus 1 for the current node.
        return Math.max(leftDepth, rightDepth) + 1;
    }

    public static void main(String[] args) {
        // Example usage
        BinaryTreeDepth treeDepth = new BinaryTreeDepth();

        // Construct a sample binary tree
        TreeNode root = new TreeNode(1);
        root.left = new TreeNode(2);
        root.right = new TreeNode(3);
        root.left.left = new TreeNode(4);
        root.left.right = new TreeNode(5);

        // Get the maximum depth
        int depth = treeDepth.maxDepth(root);

        System.out.println("Maximum Depth of the Binary Tree: " + depth);
    }
}
